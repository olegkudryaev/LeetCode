package com.leetcode.array.easy;

public class CellsWithOddValuesInMatrix {
    /**
     * 1252. Ячейки с нечетными значениями в матрице
     * Легкий
     * Темы
     * Компании
     * Намекать
     * Есть m x nматрица, которая инициализируется всеми 0. Есть также двумерный массив indices, где каждый представляет собой 0-индексированное местоположение для выполнения некоторых операций приращения на матрице.indices[i] = [ri, ci]
     * <p>
     * Для каждого местоположения indices[i]выполните оба следующих действия:
     * <p>
     * Увеличить все ячейки в строке .ri
     * Увеличить все ячейки в столбце .ci
     * При наличии m, nи indices, вернуть количество ячеек с нечетными значениями в матрице после применения приращения ко всем позициям вindices .
     * <p>
     * <p>
     * <p>
     * Пример 1:
     * <p>
     * <p>
     * Вход: m = 2, n = 3, индексы = [[0,1],[1,1]]
     * Выход: 6
     * Пояснение: Начальная матрица = [[0,0,0],[0,0,0]].
     * После применения первого приращения становится [[1,2,1],[0,1,0]].
     * Конечная матрица — [[1,3,1],[1,3,1]], которая содержит 6 нечетных чисел.
     * Пример 2:
     * <p>
     * <p>
     * Вход: m = 2, n = 2, индексы = [[1,1],[0,0]]
     * Выход: 0
     * Пояснение: Итоговая матрица = [[2,2],[2,2]]. В итоговой матрице нет нечетных чисел.
     * <p>
     * <p>
     * Ограничения:
     * <p>
     * 1 <= m, n <= 50
     * 1 <= indices.length <= 100
     * 0 <= ri < m
     * 0 <= ci < n
     * <p>
     * <p>
     * Продолжение: Сможете ли вы решить эту задачу O(n + m + indices.length)вовремя, имея только O(n + m)дополнительное пространство?
     */
    public static int oddCells(int m, int n, int[][] indices) {
        int count = 0;
        int[] row = new int [n];
        int[] col = new int [m];
        for(int[] x : indices)
        {
            row[x[0]]++;
            col[x[1]]++;
        }
        for(int i=0;i<n;i++)
            for(int j=0;j<m;j++)
            {
                if((row[i]+col[j])%2!=0)
                    count++;
            }
        return count;
    }
}
