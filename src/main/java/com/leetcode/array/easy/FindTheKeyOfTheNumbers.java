package com.leetcode.array.easy;

public class FindTheKeyOfTheNumbers {

    /**
     * 3270. Find the Key of the Numbers
     * Easy
     * Topics
     * Companies
     * You are given three positive integers num1, num2, and num3.
     * <p>
     * The key of num1, num2, and num3 is defined as a four-digit number such that:
     * <p>
     * Initially, if any number has less than four digits, it is padded with leading zeros.
     * The ith digit (1 <= i <= 4) of the key is generated by taking the smallest digit among the ith digits of num1, num2, and num3.
     * Return the key of the three numbers without leading zeros (if any).
     * <p>
     * <p>
     * <p>
     * Example 1:
     * <p>
     * Input: num1 = 1, num2 = 10, num3 = 1000
     * <p>
     * Output: 0
     * <p>
     * Explanation:
     * <p>
     * On padding, num1 becomes "0001", num2 becomes "0010", and num3 remains "1000".
     * <p>
     * The 1st digit of the key is min(0, 0, 1).
     * The 2nd digit of the key is min(0, 0, 0).
     * The 3rd digit of the key is min(0, 1, 0).
     * The 4th digit of the key is min(1, 0, 0).
     * Hence, the key is "0000", i.e. 0.
     * <p>
     * Example 2:
     * <p>
     * Input: num1 = 987, num2 = 879, num3 = 798
     * <p>
     * Output: 777
     * <p>
     * Example 3:
     * <p>
     * Input: num1 = 1, num2 = 2, num3 = 3
     * <p>
     * Output: 1
     * <p>
     * <p>
     * <p>
     * Constraints:
     * <p>
     * 1 <= num1, num2, num3 <= 9999
     */
    public static int generateKey(int num1, int num2, int num3) {

        int count = 1000;

        while (count!=0){
            int min = Math.min(num1 / count, num2 / count);
            min =

            count/=10;
        }


        return 0;
    }
}
